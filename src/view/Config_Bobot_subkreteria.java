/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import cmpnt.MyTblModel;
import cmpnt.MyTblModel1;
import com.mysql.jdbc.Statement;
import conn.koneksi;
import java.awt.Color;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public final class Config_Bobot_subkreteria extends javax.swing.JFrame {
    koneksi conn= new koneksi();
        DefaultTableModel tb;
        DefaultTableModel tb2;
        DefaultTableModel tb3;
        DefaultTableModel tb4;
    /**
     * Creates new form Config_Bobot
     */
    public Config_Bobot_subkreteria() {
        initComponents();
        tampildata();
        jComboBox1.setSelectedIndex(0);
        tabelmodelawal();
        SetTblcolor();
        tabledataawal();
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background1 = new cmpnt.background();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JML = new javax.swing.JLabel();
        N = new javax.swing.JLabel();
        MAX = new javax.swing.JLabel();
        CI = new javax.swing.JLabel();
        CR = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        background1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 18)); // NOI18N
        jLabel1.setText("Sub Kreteria Bobot");

        jButton1.setText("Hitung");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Jumlah");

        jLabel3.setText("N");

        jLabel4.setText("Max");

        jLabel5.setText("CI");

        jLabel6.setText("CR");

        JML.setText("-");

        N.setText("-");

        MAX.setText("-");

        CI.setText("-");

        CR.setText("-");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Kriteria :");

        jButton2.setText("Simpan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout background1Layout = new javax.swing.GroupLayout(background1);
        background1.setLayout(background1Layout);
        background1Layout.setHorizontalGroup(
            background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(background1Layout.createSequentialGroup()
                        .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(background1Layout.createSequentialGroup()
                                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JML)
                                    .addComponent(N)
                                    .addComponent(MAX)
                                    .addComponent(CI)
                                    .addComponent(CR)))
                            .addComponent(jLabel7))
                        .addGap(0, 82, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(background1Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        background1Layout.setVerticalGroup(
            background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(background1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6))
                    .addGroup(background1Layout.createSequentialGroup()
                        .addComponent(JML)
                        .addGap(20, 20, 20)
                        .addComponent(N)
                        .addGap(20, 20, 20)
                        .addComponent(MAX)
                        .addGap(20, 20, 20)
                        .addComponent(CI)
                        .addGap(20, 20, 20)
                        .addComponent(CR)))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("TABEL1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("TABEL3");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        jTable4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setText("TABEL4");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("TABEL2");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(background1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    GetJumlahPerColumn();
    GetJumlahPerBaris();
    GetPrioritasValueBobot();
    GetSubPrioritasValueBobot();
    getdatatbl3();
    getdatatbl4();
    SetTblcolor();
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
          JML.setText("");
        N.setText("");
        MAX.setText("");
        CI.setText("");
        CR.setText("");
        tabelmodelawal();
        tabledataawal();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
simpan();
JOptionPane.showMessageDialog(this,"Data Telah Tersimpan !!!");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // TODO add your handling code here:

        int row=jTable1.getSelectedRow();
        int col=jTable1.getSelectedColumn();
        if (jTable1.getValueAt(row, col).toString().equals("")) {

        }
        else{
            float value=1/Float.valueOf(jTable1.getValueAt(row, col).toString());
            jTable1.setValueAt(value, col-1,row+1);
        }
    }//GEN-LAST:event_jTable1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Config_Bobot_subkreteria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Config_Bobot_subkreteria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Config_Bobot_subkreteria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Config_Bobot_subkreteria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Config_Bobot_subkreteria().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CI;
    private javax.swing.JLabel CR;
    private javax.swing.JLabel JML;
    private javax.swing.JLabel MAX;
    private javax.swing.JLabel N;
    private cmpnt.background background1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
public  void tabelmodelawal(){
       tb =new DefaultTableModel(){ 
           @Override
    public boolean isCellEditable(int row, int column) {
               boolean x=false;
         int kolam=tb.getColumnCount();
    int baris=tb.getRowCount();
    for (int i = 0; i <3; i++) {
        if (column<=row+1) {
            x=false;
        }
        else{
            x=true;
        }
      
       }
               return x;
    }
           
};
       
       tb2 =new DefaultTableModel();
       tb3 =new DefaultTableModel();
       tb4 =new DefaultTableModel();
       tb.addColumn("x");
       tb2.addColumn("x");
       tb3.addColumn("x");
       tb4.addColumn("x");
     try {
         ResultSet res = conn.ambilData("select * from tbl_sub_kriteria where Nama_Kriteria='"+jComboBox1.getSelectedItem().toString()+"' order by kode_sub asc");
        while (res.next()){
                    tb.addColumn(res.getString(3));
                    tb2.addColumn(res.getString(3));
                    tb3.addColumn(res.getString(3));
                } 
        jTable1.setModel(tb);
        jTable2.setModel(tb2);
        jTable3.setModel(tb3);
        jTable4.setModel(tb4);
          } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, ex);
        }   
     
    }
 public void tabledataawal() {
     try {
        tb.getDataVector().removeAllElements();
        tb.fireTableDataChanged();
        
         ResultSet res = conn.ambilData("select * from tbl_sub_kriteria where Nama_Kriteria='"+jComboBox1.getSelectedItem().toString().replace(" ","_") +"' order by kode_sub asc");
             
        for (int x = 0; res.next(); x++) {
        Object[] datatbl = new Object[jTable1.getRowCount()+2];
        datatbl[0]=(res.getString(3));
        datatbl[x+1]=1;
        tb.addRow(datatbl);
                }
         ResultSet rs=conn.ambilData("select *from bobot_sub_kriteria where nama_kriteria='"+jComboBox1.getSelectedItem().toString().replace(" ","_")+"' ");
          //  if (rs!=null) {
                for (int i = 0;rs.next(); i++) {
                    jTable1.setValueAt(rs.getDouble(3),rs.getInt(4),rs.getInt(5));
                }
            //    GetJumlahPerColumn();
//GetJumlahPerBaris();
//GetPrioritasValueBobot();
//getdatatbl3();
//getdatatbl4();
//SetTblcolor();
 //           }
         } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, ex);
        }    
    }
void GetJumlahPerColumn(){
    int kolam=jTable1.getColumnCount();
    int baris=jTable1.getRowCount();
     if (jTable1.getValueAt(baris-1,0).toString().equals("JUMLAH")) {
        baris=baris-1;
        tb.removeRow(baris);
    }
       Object[] datatbl = new Object[11];
       datatbl[0]=("JUMLAH");
    for (int i = 1; i <kolam; i++) {
        float sum=0;
        for (int j = 0; j < baris; j++) {
     float val= Float.valueOf(jTable1.getValueAt(j,i).toString());    
     sum=sum+val;
        }
        datatbl[i]=sum; 
       }
         tb.addRow(datatbl);
         getdatatbl2();
}
void getdatatbl2(){
    try {
        int baris=jTable1.getRowCount();
        int kolam=jTable1.getColumnCount();
        tb2.getDataVector().removeAllElements();
        tb2.fireTableDataChanged();
         Object[] datatbl = new Object[11];
        for (int x = 0; x<baris-1; x++) {
            for (int i = 0; i < kolam; i++) {
                if (i==0) {
              datatbl[i]=jTable1.getModel().getValueAt(x,i);              
                }
                else{
              datatbl[i]=Float.valueOf(jTable1.getModel().getValueAt(x,i).toString())/
                      Float.valueOf(jTable1.getModel().getValueAt(baris-1,i).toString()); 
                }
            }

        tb2.addRow(datatbl);
        }
        
         } catch (Exception ex) {
           JOptionPane.showMessageDialog(this, ex);
        }   
}
void GetJumlahPerBaris(){
    int kolam=jTable2.getColumnCount();
    int baris=jTable2.getRowCount();
        if (jTable2.getColumnName(kolam-3).equals("jumlah")) {
        kolam=kolam-3;
   }
    else{
        tb2.addColumn("jumlah");  
    }
       Object[] datatbl = new Object[11];
    for (int i = 0; i <baris; i++) {
        float sum=0;
        for (int j = 1; j < kolam; j++) {
     float val= Float.valueOf(jTable2.getValueAt(i,j).toString());    
     sum=sum+val;
        }
        jTable2.setValueAt(sum,i,kolam);
       }
    }
void GetPrioritasValueBobot(){
    int kolam=jTable2.getColumnCount();
    int baris=jTable2.getRowCount(); 
    if (jTable2.getColumnName(kolam-2).equals("Prioritas")) {
        kolam=kolam-2;
   }
    else{
       tb2.addColumn("Prioritas");
       }
       Object[] datatbl = new Object[11];
    for (int i = 0; i <baris; i++) {
        float sum=0;
     float val= Float.valueOf(jTable2.getValueAt(i,kolam-1).toString());    
     sum=val/(kolam-2);
        jTable2.setValueAt(sum,i,kolam);
       }
    }
void GetSubPrioritasValueBobot(){
    int kolam=jTable2.getColumnCount();
    int baris=jTable2.getRowCount();
    double x=0;
    if (jTable2.getColumnName(kolam-1).equals("Sub Prioritas")) {
        kolam=kolam-1;
   }
    else{
       tb2.addColumn("Sub Prioritas");
       }
    
      LinkedList a = new LinkedList();
    for (int i = 0; i <baris; i++) {
             a.add(jTable2.getValueAt(i,kolam-1));
       }
     for (int j = 0; j < a.size(); j++) {
                if (Double.valueOf(a.get(j).toString())
                     > x) {
                   x=Double.valueOf(a.get(j).toString());
                }
              }
      for (int i = 0; i <baris; i++) {
      double sub=0;
       sub= Double.valueOf(jTable2.getValueAt(i,kolam-1).toString())/x;
       jTable2.setValueAt(sub,i,kolam);}
     
    }
void SetTblcolor(){
    MyTblModel ctcr=new MyTblModel();
     ctcr.setHorizontalAlignment(SwingConstants.CENTER);
                jTable1.setDefaultRenderer(Object.class,ctcr);
    MyTblModel1 ctcr1=new MyTblModel1();
     ctcr.setHorizontalAlignment(SwingConstants.CENTER);
                jTable2.setDefaultRenderer(Object.class,ctcr1);
                jTable3.setDefaultRenderer(Object.class,ctcr1);
}
void getdatatbl3(){
     try {
        int baris=jTable1.getRowCount();
        int kolam=jTable1.getColumnCount();
        int kolam2=jTable2.getColumnCount();
        tb3.getDataVector().removeAllElements();
        tb3.fireTableDataChanged();
         Object[] datatbl = new Object[11];
        for (int x = 0; x<baris-1; x++) {
            for (int i = 0; i < kolam; i++) {
                if (i==0) {
              datatbl[i]=jTable1.getModel().getValueAt(x,i);              
                }
                else{
              datatbl[i]=Float.valueOf(jTable2.getModel().getValueAt(x,kolam2-2).toString())*
                      Float.valueOf(jTable1.getModel().getValueAt(x,i).toString()); 
                }
            }

        tb3.addRow(datatbl);
        }
        jmlh_datatbl3();
         } catch (Exception ex) {
           JOptionPane.showMessageDialog(this, ex);
        }   
}
void jmlh_datatbl3(){
     int kolam=jTable3.getColumnCount();
    int baris=jTable3.getRowCount();
        if (jTable3.getColumnName(kolam-1).equals("jumlah")) {
        kolam=kolam-1;
   }
    else{
        tb3.addColumn("jumlah");  
    }
       Object[] datatbl = new Object[11];
    for (int i = 0; i <baris; i++) {
        float sum=0;
        for (int j = 1; j < kolam; j++) {
     float val= Float.valueOf(jTable3.getValueAt(i,j).toString());    
     sum=sum+val;
        }
        jTable3.setValueAt(sum,i,kolam);
       }
}
void getdatatbl4(){
    
        int baris=jTable2.getRowCount();
        int kolam2=jTable2.getColumnCount();
        int kolam3=jTable3.getColumnCount();
        int kolam=jTable4.getColumnCount();
        tb4.getDataVector().removeAllElements();
        tb4.fireTableDataChanged();
           if (jTable4.getColumnName(kolam-2).equals("Prioritas")) {
        kolam=kolam-1;
   }
    else{
         tb4.addColumn("Jumlah Per Baris");
        tb4.addColumn("Prioritas");
    }
         Object[] datatbl = new Object[11];
        for (int x = 0; x<baris; x++) {
            for (int i = 0; i < 3; i++) {
                if (i==0) {
              datatbl[i]=jTable1.getModel().getValueAt(x,i);              
                }
                else if (i==1){
              datatbl[i]=Float.valueOf(jTable3.getModel().getValueAt(x,kolam3-1).toString());
                }
                else{
                    datatbl[i]=Float.valueOf(jTable2.getModel().getValueAt(x,kolam2-2).toString());
                }
            }

        tb4.addRow(datatbl);
        }
       Hasil();
        
}
void Hasil(){
     int kolam=jTable4.getColumnCount();
    int baris=jTable4.getRowCount();
          if (jTable4.getColumnName(kolam-1).equals("Hasil")) {
        kolam=kolam-1;
   }
    else{
         tb4.addColumn("Hasil"); 
    }
       Object[] datatbl = new Object[11];
       float jml = 0;
    for (int i = 0; i <baris; i++) {
        float sum=0;
        for (int j = 1; j < kolam; j++) {
     float val= Float.valueOf(jTable4.getValueAt(i,j).toString());    
     sum=sum+val;
     jml=jml+val;
        } 
        jTable4.setValueAt(sum,i,kolam);
        JML.setText(""+jml);
        N.setText(""+baris);
        MAX.setText(""+(jml/baris));
        CI.setText(""+((jml/baris)-baris)/(baris-1));
        CR.setText(""+(((jml/baris)-baris)/(baris-1))/1);
        
       }
}
public void tampildata(){
        try { 
            ResultSet res = conn.ambilData("select * from tbl_kriteria");
           while (res.next()){
               jComboBox1.addItem(res.getObject(2)); 
           }
        } catch (SQLException ex) {
            Logger.getLogger(Config_Bobot_subkreteria.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
void simpan(){
    conn.simpanData("delete from subprioritas where Kriteria='"+jComboBox1.getSelectedItem()+"'");
    conn.simpanData("delete from bobot_sub_kriteria where Nama_kriteria='"+jComboBox1.getSelectedItem()+"'");
    conn.simpanData("delete from hasil_sub_bobot where nama_Kriteria='"+jComboBox1.getSelectedItem()+"'");
         int baris=jTable1.getRowCount();
        int kolam=jTable1.getColumnCount();
        for (int x = 0; x<baris-1; x++) {
            for (int i = 1; i < kolam; i++) {
               conn.simpanData("insert into bobot_sub_kriteria values('"+jComboBox1.getSelectedItem()+"','"+jTable1.getValueAt(x,0)+"',"
                       + "'"+jTable1.getValueAt(x, i)+"','"+x+"','"+i+"')");
            }
        }
        conn.simpanData("insert into hasil_sub_bobot values('"+jComboBox1.getSelectedItem()+"','"+JML.getText()+"','"+N.getText()+"'"
              + ",'"+MAX.getText()+"'"+",'"+CI.getText()+"'"+",'"+CR.getText()+"')");
        int col=jTable2.getColumnCount();
    int row=jTable2.getRowCount();
        for (int i = 0; i <row; i++) {
         conn.simpanData("insert into subprioritas values('"+jComboBox1.getSelectedItem()+"','"+jTable2.getValueAt(i,0)+"',"
                       + "'"+jTable2.getValueAt(i,col-1)+"')");      
       }
}
}
